Módulo 1

Q1: Depois que uma CPU executa uma instrução, o que, geralmente, faz a seguir?
R: executa a próxima instrução na sequência de instruções.

Q2: Em código de máquina, para que serve a instrução goto?
R: Alterar a ordem de execução de instruções pela CPU, como, por exemplo, para implementar loops de repetição e estruturas condicionais.

Módulo 2

Q1: Suponha que você clique duas vezes no Firefox.exe em um computador para executá-lo. Qual das seguintes opções descreve melhor o que acontece?
R: O sistema operacional copia as instruções do Firefox do disco para a RAM e, em sequida, a CPU executa as intruções na RAM.

Q2: Firmwares são componentes fundamentais de computadores, pois:
R: São responsáveis por dar início ao processo de boot, para carregamento do sistema operacional.

A compiled programming language, like C or C++, requires a separate program called a compiler to translate the source code into machine code, which is then executed directly by the computer's processor. The compilation process typically involves several steps, including preprocessing, compilation, assembly, and linking. The resulting executable file can be run independently of the compiler and the source code.

On the other hand, an interpreted programming language, like Python or Ruby, does not require compilation. Instead, the source code is interpreted line-by-line by an interpreter program, which executes the instructions directly. The interpreter reads the source code, converts it into an intermediate code, and then executes the code on the fly. Since the interpreter has to read and interpret each line of code at runtime, interpreted programs may run slower than compiled programs.

In general, compiled languages tend to be faster and more efficient, as the code has already been translated into machine code before execution. Interpreted languages, on the other hand, tend to be more flexible and easier to debug, as the source code can be modified and executed dynamically without requiring a separate compilation step.

Módulo 3

Q1: Qual das opções a seguir descreve melhor o que um compilador C++ faz?
R: Traduz o código-fonte em C++ para código de máquina, que pode ser executado diretamente pelo processador.

Q2: O código de máquina da CPU possui apenas instruções simples e de baixo nível. Uma linguagem de computador (como JavaScript) adiciona recursos de alto nível, como o loop que usamos. Qual das alternativas a seguir é uma instrução de baixo nível?
R: Adicione dois números inteiros.
